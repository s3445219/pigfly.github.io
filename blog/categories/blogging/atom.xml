<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blogging | Pigfly's learning notes]]></title>
  <link href="http://pigfly.github.io/blog/categories/blogging/atom.xml" rel="self"/>
  <link href="http://pigfly.github.io/"/>
  <updated>2015-05-29T13:59:55+10:00</updated>
  <id>http://pigfly.github.io/</id>
  <author>
    <name><![CDATA[Alex]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix date not get rendered after upgrade octopress]]></title>
    <link href="http://pigfly.github.io/blog/2015/05/fix-date-not-get-rendered-after-upgrade-octopress/"/>
    <updated>2015-05-29T10:05:04+10:00</updated>
    <id>http://pigfly.github.io/blog/2015/05/fix-date-not-get-rendered-after-upgrade-octopress</id>
    <content type="html"><![CDATA[<p>Recently when I upgrade the octopress I found the date for post isn&rsquo;t properly rendered. Then I decided to sit down to
spend some time fixing this issue, it turns out to be a very interesting one. I put all of my debug traces here to remind
me this journey.</p>

<!--more-->


<h2>The problem</h2>

<p>The date for post doesn&rsquo;t get rendered. <img src="/images/octopress/date_missing_in_post.png" width="100" height="100" title="date missing" > <br>
And when I inspects the relevant source code it shows the time tag only with something like this <code>&lt;time datetime="2014-12-30T06:30:00+01:00" pubdate data-updated="true"&gt;&lt;/time&gt;</code>. So where is actually date text ?</p>

<hr />

<h2>First Try</h2>

<p>The first thing occurred to my mind is probably I screwed up some date formats so that octopress magic date rendering function can&rsquo;t parse the customized date format ?
So I go to <a href="http://www.strfti.me/">strfti.me</a> to validate my date formats. After trying a few combination, get added to
<code>_config.yml</code> with something like <code>date_format: "%Y-%m-%d"</code>, no luck.
So, date format is ok, maybe I don&rsquo;t get the liquid templating right ? After all, octopress is built on top of Jekyll, and
Jekyll uses the liquid for rendering.</p>

<h2>Second Try</h2>

<p>After a few searches, I figure out that the actual rendering work for post date is done in <code>date.html</code>. Which, is in a
chain of <code>include</code> with the path: <code>index.html -&gt; article.html -&gt; date.html</code>.
So the <strong>time</strong> is there, actually it&rsquo;s generated by <code>date.html</code>, get parsed in <code>article.html</code>. But why it&rsquo;s missing after <code>rake generate</code> ?
<div><script src='https://gist.github.com/4a396d183fd1cc1e7451.js?file=article.html'></script>
<noscript><pre><code>&lt;h5 class=&quot;date-time&quot;&gt;{% include post/date.html %}&lt;i class=&quot;icon-calendar&quot;&gt;&lt;/i&gt; {{ time }}&lt;/h5&gt;</code></pre></noscript></div>

So I do a diff between my previous working version and current one for <code>article.html</code>:
<div><script src='https://gist.github.com/4a396d183fd1cc1e7451.js?file=diff_for_article.diff'></script>
<noscript><pre><code>1c1
&lt; &lt;h5 class=&quot;date-time&quot;&gt;{% include post/date.html %}&lt;i class=&quot;icon-calendar&quot;&gt;&lt;/i&gt; {{ time }}&lt;/h5&gt;
---
&gt; &lt;div class=&quot;date&quot;&gt;{% include post/date.html %}{{ time }}&lt;/div&gt;</code></pre></noscript></div>

Well, it&rsquo;s almost the same except for some irrelevant css stuff.
So Could it be the problem with the <code>date.html</code> shipped with new octopress version ?</p>

<h2>Third Try</h2>

<p>Alright, the <code>date.html</code> is full of liquid templating which almost makes no sense to me. What should I do ? Hmm, doing a diff with previous working version is still a good start:
<div><script src='https://gist.github.com/4a396d183fd1cc1e7451.js?file=date.html'></script>
<noscript><pre><code>{% capture date %}{{ page.date }}{{ post.date }}{% endcapture %}
{% capture date_formatted %}{{ page.date_formatted }}{{ post.date_formatted }}{% endcapture %}
{% capture has_date %}{{ date | size }}{% endcapture %}

{% capture updated %}{{ page.updated }}{{ post.updated }}{% endcapture %}
{% capture updated_formatted %}{{ page.updated_formatted }}{{ post.updated_formatted }}{% endcapture %}
{% capture was_updated %}{{ updated | size }}{% endcapture %}

{% if has_date != &#39;0&#39; %}
  {% capture time %}&lt;time datetime=&quot;{{ date | datetime | date_to_xmlschema }}&quot; {% if updated %}data-updated=&quot;true&quot;{% endif %} itemprop=&quot;datePublished&quot;&gt;{{ date_formatted }}&lt;/time&gt;{% endcapture %}
{% endif %}

{% if was_updated != &#39;0&#39; %}
  {% capture updated %}&lt;time datetime=&quot;{{ updated | datetime | date_to_xmlschema }}&quot; class=&quot;updated&quot; itemprop=&quot;dateModified&quot;&gt;Updated {{ updated_formatted }}&lt;/time&gt;{% endcapture %}
{% else %}{% assign updated = false %}{% endif %}</code></pre></noscript></div>

It&rsquo;s the same ! But this is the file responsible for showing the time ! what am I missing here ? <br>
Could it be the change of API in Jekyll for date formatting ? I go to the <a href="http://jekyllrb.com/docs/templates/">Jekyll docs</a> to check the <code>date_to_xmlschema</code>, everything seems fine.
However, when I check the <a href="https://github.com/octopress/date-format">octopress docs</a>, I found something called <code>post.date_time_html</code> mentioned there which doesn&rsquo;t appear in our <code>date.html</code> at all! <br>
According to the docs, using <code>post.date_time_html</code> will render the following html:
<div><script src='https://gist.github.com/4a396d183fd1cc1e7451.js?file=post.date_time_html.html'></script>
<noscript><pre><code>&lt;time class=&#39;entry-date&#39; datetime=&#39;2014-07-03T14:08:00+00:00&#39;&gt;
  &lt;span class=&#39;date&#39;&gt;
    &lt;span class=&#39;date-month&#39;&gt;Jul&lt;/span&gt;
    &lt;span class=&#39;date-day&#39;&gt;3&lt;/span&gt;&lt;span class=&#39;date-suffix&#39;&gt;rd&lt;/span&gt;,
    &lt;span class=&#39;date-year&#39;&gt;2014&lt;/span&gt;
  &lt;/span&gt;
  &lt;span class=&#39;time&#39;&gt;2:08 pm&lt;/span&gt;
&lt;/time&gt;</code></pre></noscript></div>

All those <code>spans</code> are exactly what I&rsquo;m looking for ! <br>
So using these two lines solve my issue, holy cow !
<div><script src='https://gist.github.com/4a396d183fd1cc1e7451.js?file=fix_post_date_time'></script>
<noscript><pre><code>{% if page.date %}{% capture time %}{{ page.date_time_html }}{% endcapture %}{% endif %}
{% if post.date %}{% capture time %}{{ post.date_time_html }}{% endcapture %}{% endif %}</code></pre></noscript></div>
</p>

<h2>Forth Try</h2>

<p>The issue has already been patched with this commit by octopress <a href="https://github.com/imathis/octopress/commit/73e540409ceb8bc18048b6a96a4b815fc303ea28">patch</a>
<div><script src='https://gist.github.com/4a396d183fd1cc1e7451.js?file=patch.diff'></script>
<noscript><pre><code>@@ -1,15 +1,5 @@
-{% capture date %}{{ page.date }}{{ post.date }}{% endcapture %}
-{% capture date_formatted %}{{ page.date_formatted }}{{ post.date_formatted }}{% endcapture %}
-{% capture has_date %}{{ date | size }}{% endcapture %}
+{% if page.date %}{% capture time %}{{ page.date_time_html }}{% endcapture %}{% endif %}
+{% if post.date %}{% capture time %}{{ post.date_time_html }}{% endcapture %}{% endif %}
 
-{% capture updated %}{{ page.updated }}{{ post.updated }}{% endcapture %}
-{% capture updated_formatted %}{{ page.updated_formatted }}{{ post.updated_formatted }}{% endcapture %}
-{% capture was_updated %}{{ updated | size }}{% endcapture %}
-
-{% if has_date != &#39;0&#39; %}
-  {% capture time %}&lt;time datetime=&quot;{{ date | datetime | date_to_xmlschema }}&quot; pubdate{% if updated %} data-updated=&quot;true&quot;{% endif %}&gt;{{ date_formatted }}&lt;/time&gt;{% endcapture %}
-{% endif %}
-
-{% if was_updated != &#39;0&#39; %}
-  {% capture updated %}&lt;time datetime=&quot;{{ updated | datetime | date_to_xmlschema }}&quot; class=&quot;updated&quot;&gt;Updated {{ updated_formatted }}&lt;/time&gt;{% endcapture %}
-{% else %}{% assign updated = false %}{% endif %} 
+{% if page.updated %}{% capture updated %}{{ page.date_time_updated_html }}{% endcapture %}{% endif %}
+{% if post.updated %}{% capture updated %}{{ post.date_time_updated_html }}{% endcapture %}{% endif %}</code></pre></noscript></div>

Now, my post date gets back :) <img src="/images/octopress/date_get_back_in_post.png" width="100" height="100" title="date back" ></p>
]]></content>
  </entry>
  
</feed>
